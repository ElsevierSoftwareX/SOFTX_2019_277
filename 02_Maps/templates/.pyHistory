proj = arcpy.mp.ArcGISProject("D:/temp/copy_riv.aprx")
lyt = proj.listLayouts('layout_lf')[0]
frame = lyt.listElements("mapframe_element")[0]
leg = lyt.listElements("legend_element")[0]
leg
dir(leg)
leg.syncLayerOrder
leg.syncLayerVisibility
proj2 = arcpy.mp.ArcGISProject("D:\\Python\\RiverArchitect\\02_Maps\\2017_pbr_lyr20\\maps_2017_pbr_lyr20_design.aprx")
m=proj2.listMaps('layer_lf')[0]
lf_source_layer = self.m.listLayers('lf_sym')[0]
lf_source_layer = m.listLayers('lf_sym')[0]
lf_source_layer = m.listLayers()[0]
map_layout = aprx.listLayouts('layout_lf')[0]
map_layout = proj2.listLayouts('layout_lf')[0]
map_frame = map_layout.listElements("mapframe_element")[0]
legend = map_frame.listElements("legend_element")[0]
legend = map_layout.listElements("legend_element")[0]
map_frame.getLayerExtent(lyr)
map_frame.getLayerExtent(lf_source_layer)
aprx = arcpy.project("D:/temp/river_template.aprx")
aprx = arcpy.mp.ArcGISProject("D:/temp/river_template.aprx")
m = aprx.listMaps()[0]
m = aprx.listMaps('layout_lf')[0]
m = aprx.listMaps('layer_lf')[0]
map_layout = aprx.listLayouts('layout_lf')[0]
m.listLayers('lf_sym')[0]
lyr = m.listLayers('lf_sym')[0]
dir(lyr)
lyr.dataSource
m.listLayers()
lyr = m.listLayers('background')[0]
lyr.dataSource
lyr.dataSource = 'D:\\Python\\RiverArchitect\\01_Conditions\\2008\\back'
arcpy.env.overwriteOutput = True
lyr.dataSource = 'D:\\Python\\RiverArchitect\\01_Conditions\\2008\\back'
lyr.workspacePath
lyr.replaceDataSource('D:\\Python\\RiverArchitect\\01_Conditions\\2008\\', NONE, "back", False)
lyr.connectionProperties
lyr.connectionProperties['connection_info']['database'] = 'D:\\Python\\RiverArchitect\\01_Conditions\\2008\\'
lyr.connectionProperties['dataset'] = 'back'
aprx.save
lyr.updateConnectionProperties({'dataset': 'back.tif'}, {'dataset':'back'}, True, False)
lyr.updateConnectionProperties({'connection_info': {'database': 'D:\\Python\\RiverArchitect\\01_Conditions\\2017'}}, {'connection_info': {'database': 'D:\\Python\\RiverArchitect\\01_Conditions\\2008'}}, True, False)
aprx.save
aprx.close()
aprx.updateConnectionProperties()
del aprx
lyr.connectionProperties['connection_info']['database']
import os
dird = os.getcwd()
dird
aprx = arcpy.mp.ArcGISProject(dird+"\\river_template")
aprx = arcpy.mp.ArcGISProject(dird+"\\river_template.aprx")
m = aprx.listMaps()[0]
m.listLayers("Best Lifespans")[0]
for i in m.listLayers():     print i.name
for i in m.listLayers():     print(i.name)
m = aprx.listMaps('layout_mlf_terraforming')[0]
import os
dd = os.getcwd()
arcpy.mp.LayerFile(dd+"\\symbology\\LifespanRasterSymbology.lyrx")
myl = arcpy.mp.LayerFile(dd+"\\symbology\\LifespanRasterSymbology.lyrx")
myl.symbology
dir(myl)
myl.listLayers()[0]
myl.listLayers()[0].symbology
